# Version: 0.0.292

ignore = [
  # "E203", # whitespace before ':' -- Not PEP8 compliant, black won't correct it, add when out of nursery
  "E501", # Line too long -- Clashes with `black`
  "D1", # Missing docstring for {} -- Inconvenient to enforce
# The following "D" rules do not correspond to our coding style. We use the pep257 convention, but
# "D212" should not be ignored. In `ruff 0.0.292` we cannot select a rule that is excluded by specifying
# a convention, hence our only option is to manually replicate it.
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D214", # Section is over-indented ("{name}")
  "D215", # Section underline is over-indented ("{name}")
  "D404", # First word of the docstring should not be "This"
  "D405", # Section name should be properly capitalized ("{name}")
  "D406", # Section name should end with a newline ("{name}")
  "D407", # Missing dashed underline after section ("{name}")
  "D408", # Section underline should be in the line following the section's name ("{name}")
  "D409", # Section underline should match the length of its name ("{name}")
  "D410", # Missing blank line after section ("{name}")
  "D411", # Missing blank line before section ("{name}")
  "D413", # Missing blank line after last section ("{name}")
  "D415", # First line should end with a period, question mark, or exclamation point
  "D416", # Section name should end with a colon ("{name}")
  "D417", # Missing argument description in the docstring for {definition}: {name}
  "B009", # Do not call getattr with a constant attribute value. -- Not always applicable
  "B010", # Do not call setattr with a constant attribute value. -- Not always applicable
  "RUF012", # type class attrs with `ClassVar` -- Too strict/trigger-happy
  # "UP007", # Use X | Y for type annotations -- `typer` doesn't support it
  "COM812", # Checks for the absence of trailing commas -- leads to undesirable behavior from formatters
  "PIE804", # Unnecessary `dict` kwargs -- Inconvenient to enforce
  "RET505", # Unnecessary {branch} after return statement -- Lots of false positives
  "RET506", # Unnecessary {branch} after raise statement -- Lots of false positives
  "RET507", # Unnecessary {branch} after continue statement -- Lots of false positives
  "RET508", # Unnecessary {branch} after break statement -- Lots of false positives
  "PLR09", # upper bound on number of arguments, functions, etc. -- Inconvenient to enforce
  "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable -- Inconvenient to enforce
  "PLW2901", # `for` loop variable `{var}` overwritten by assignment target -- Inconvenient to enforce
  "TRY002", # Create your own exception -- Inconvenient to enforce
  "TRY003", # Avoid specifying long messages outside the exception class -- Inconvenient to enforce
]
select = [
  "F", # Pyflakes
  "E", # pycodestyle Errors
  "W", # pycodestyle Warnings
  "C90", # mccabe
  "I", # isort
  "D", # pydocstyle
  "UP", # pyupgrade
  "B", # flake8-bugbear
  "INP", # flake8-no-pep420
  "RUF", # Ruff-specific rules
  "YTT", # flake8-2020
  "ASYNC", # flake8-async
  "BLE", # flake8-blind-except
  "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "T10", # flake8-debugger
  "EM", # flake8-errmsg
  "FA", # flake8-future-annotations
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "PT", # flake8-pytest-style
  "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLOT", # flake8-slots
  "SIM", # flake8-simplify
  # Wait for significant improvements,
  # see https://github.com/astral-sh/ruff/issues/7866
  # and https://github.com/astral-sh/ruff/issues/7893
  # "TCH", # flake8-type-checking
  "PTH", # flake8-use-pathlib
  "PGH", # pygrep-hooks
  "PL", # Pylint
  "TRY", # tryceratops
  # "FURB", # refurb, add when out of nursery
  # "LOG", # flake8-logging, add when out of nursery
]
output-format = "grouped"
show-fixes = true
task-tags = ["TODO", "HACK", "FIXME", "XXX"]
target-version = "py310"

# Use `extend-` in order to retain the defaults:
# [extend-per-file-ignores]
# [extend-exclude]

[isort]
split-on-trailing-comma = false
